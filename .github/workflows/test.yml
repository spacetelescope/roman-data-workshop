name: test

on:
  push:
    paths:
      - '**/*.ipynb'
      - '**/*.yml'
      - '**/*.yaml'
      - '**/*.py'
  pull_request:
    paths:
      - '**/*.ipynb'
      - '**/*.yml'
      - '**/*.yaml'
      - '**/*.py'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: micromamba-shell {0}

jobs:
  date:
    runs-on: ubuntu-latest
    steps:
      - run: echo "date=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT
        id: date        
        shell: bash
    outputs:
      date: ${{ steps.date.outputs.date }}
  build:
    needs: [ date ]
    name: build environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: roman-data-workshop-env
          environment-file: 00_install/environment.yml
          create-args: >-
            conda
          cache-downloads: true
          cache-downloads-key: downloads-${{ needs.date.outputs.date }}
          cache-environment: true
          cache-environment-key: environment-${{ needs.date.outputs.date }}
          init-shell: none
          generate-run-shell: true
      - run: python ./00_install/verify_install.py
      - run: conda env export > roman-data-workshop-env-${{ github.sha }}.yml
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: roman-data-workshop-env-${{ github.sha }}.yml
          path: roman-data-workshop-env-${{ github.sha }}.yml
  data:
    needs: [ date, build ]
    name: download data
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: data_cache
        with:
          path: data/
          key: data-${{ hashFiles('data/download.py') }}
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: roman-data-workshop-env
          environment-file: 00_install/environment.yml
          create-args: >-
            conda
          cache-downloads: true
          cache-downloads-key: downloads-${{ needs.date.outputs.date }}
          cache-environment: true
          cache-environment-key: environment-${{ needs.date.outputs.date }}
          init-shell: none
          generate-run-shell: true
        if: steps.data_cache.outputs.cache-hit != 'true'
      - run: python data/download.py
        if: steps.data_cache.outputs.cache-hit != 'true'
  test:
    needs: [ date, build, data ]
    name: run notebooks
    runs-on: ubuntu-latest
    env:
      CRDS_SERVER_URL: https://roman-crds-test.stsci.edu
      CRDS_PATH: ~/crds_cache
      CRDS_CLIENT_RETRY_COUNT: 3
      CRDS_CLIENT_RETRY_DELAY_SECONDS: 20
    steps:
      - uses: actions/checkout@v3
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: roman-data-workshop-env
          environment-file: 00_install/environment.yml
          create-args: >-
            conda
          cache-downloads: true
          cache-downloads-key: downloads-${{ needs.date.outputs.date }}
          cache-environment: true
          cache-environment-key: environment-${{ needs.date.outputs.date }}
          init-shell: none
          generate-run-shell: true
      - run: echo "name=crds_context::$(crds list --operational-context)" >> $GITHUB_OUTPUT
        id: crds_context
      - uses: actions/cache@v3
        with:
          path: ${{ env.CRDS_PATH }}
          key: crds-jwst-datamodels-${{ steps.crds_context.outputs.crds_context }}
        if: steps.crds_context.outputs.crds_context != ''
      - run: crds sync --contexts ${{ steps.crds_context.outputs.crds_context }}
        if: steps.crds_context.outputs.crds_context != ''
      - uses: actions/cache@v3
        with:
          path: data/
          key: data-${{ hashFiles('data/download.py') }}
      - run: python data/download.py
      - run: pip install nbcollection
      - run: python -m nbcollection execute .
